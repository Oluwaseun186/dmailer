name: Pre-commit hook

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: "Install dependencies"
        run: 
          npm install

      # Run Linting
      - name: Run ESLint
        run: npx eslint . 

      # Run Lint-Staged
      - name: Run Lint-Staged
        run: npx lint-staged

      # Run Tests
      - name: Run Tests
        run: npm test

      - name: Build Image
        run: |
          docker build -t oluwaseun7/dmailer:1.0.1 .

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "Push Image to Docker Hub"
        run: |
          docker push oluwaseun7/dmailer:1.0.1
          docker run -p 3000:3000 -d oluwaseun7/dmailer:latest


      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: dmailer
          path: .
          retention-days: 90
          compression-level: 9
          if-no-files-found: warn
          overwrite: false
          include-hidden-files: false

  
  Deploy:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout Github
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: "install Node Dependencies"
        run: |
          npm install


      - name: "List artifacts"
        run: ls -l .

      - name: Generate Report
        run: npm ci

      - name: Run ESLint
        run: npx eslint . -f json -o reports/lint.json
        continue-on-error: false

      - name: "Run ESLint with Reviewdog"
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          reporter: github-pr-review


      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: dmailer
          path: ./work.txt
          if-no-files-found: warn
          
      - name: Send email
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL }}
          password: ${{ secrets.PASSWORD }}
          subject: "GitHub Action Notification"
          body: "Hello! This is a test email sent from GitHub Actions. I built artifact and download it"
          to: theoafactor@gmail.com, adewumibode7@gmail.com
          from: ${{ secrets.EMAIL }}
          secure: true # Set to false for non-TLS/SSL connections
          tls: true


    


     